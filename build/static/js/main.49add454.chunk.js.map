{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","components/common/searchBox.jsx","services/movieService.js","services/genreService.js","components/movies.jsx","utils/paginate.js","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","services/userService.js","components/registerForm.jsx","components/loginForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","concat","apiUrl","tokenKey","_callee","email","password","_ref","regenerator_default","a","wrap","_context","prev","next","http","sent","data","localStorage","setItem","stop","this","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","props","order","onSort","renderSortIcon","column","react_default","createElement","className","_this2","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","createKey","_id","_this$props","Table","tableHeader","tableBody","Like","liked","classes","style","cursor","aria-hidden","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","movie","Link","to","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","movieUrl","id","getMovie","movieId","saveMovie","body","getGenres","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPageData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","moviesCount","_this$state2","_this$getPageData","listGroup","marginBottom","searchBox","moviesTable","pagination","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","renderButton","disabled","renderSelect","common_select","renderInput","common_input","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","RegisterForm","username","window","location","LoginForm","_this$state$data","from","pathname","Redirect","Logout","ProtectedRoute","component","render","Route","App","lib","navBar","Switch","protectedRoute","components_movies","exact","Boolean","hostname","process","REACT_APP_NAME","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49add454.chunk.js","sourcesContent":["// For simplicity, I changed the implementation of this module\n// and removed Raven. We can always add that in the future\n// and this module is the only module we need to modify.\n\nfunction init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from 'axios';\nimport logger from './logService';\nimport { toast } from 'react-toastify';\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error('An unexpected error occurrred.');\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import http from './httpService';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndpoint = `${apiUrl}/auth`;\r\nconst tokenKey = 'token';\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, {\r\n    email,\r\n    password\r\n  });\r\n\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  loginWithJwt,\r\n  getJwt\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = 'asc';\r\n    }\r\n\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n\r\n    if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\" />;\r\n\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nconst Like = ({ liked, onClick }) => {\r\n  let classes = 'fa fa-heart';\r\n\r\n  if (!liked) classes += '-o';\r\n\r\n  return (\r\n    <i\r\n      onClick={onClick}\r\n      style={{ cursor: 'pointer' }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from './common/table';\r\nimport Like from './common/like';\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: 'title',\r\n      label: 'Table',\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: 'genre.name', label: 'Genre' },\r\n    { path: 'numberInStock', label: 'Stock' },\r\n    { path: 'dailyRentalRate', label: 'Rate' },\r\n    {\r\n      key: 'like',\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: 'delete',\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from 'react';\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  selectedItem,\r\n  onItemSelect\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          style={{ cursor: 'pointer' }}\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? 'list-group-item active' : 'list-group-item'\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: 'name',\r\n  valueProperty: '_id'\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? 'page-item active' : 'page-item'}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndpoint = `${apiUrl}/movies`;\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n\r\n    delete body._id;\r\n\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nexport function getGenres() {\r\n  return http.get(`${apiUrl}/genres`);\r\n}\r\n","import React, { Component } from 'react';\r\nimport MoviesTable from './moviesTable';\r\nimport ListGroup from './common/listGroup';\r\nimport Pagination from './common/pagination';\r\nimport SearchBox from './common/searchBox';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getMovies, deleteMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\nimport { paginate } from '../utils/paginate';\r\nimport _ from 'lodash';\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: '',\r\n    selectedGenre: null,\r\n    sortColumn: { path: 'title', order: 'asc' }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const { data: movies } = await getMovies();\r\n    const genres = [{ _id: '', name: 'All Genres' }, ...data];\r\n\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error('This movie has already been deleted.');\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: '', currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery) {\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: moviesCount } = this.state.movies;\r\n    const { currentPage, sortColumn, pageSize, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n    if (moviesCount === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPageData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            onPageChange={this.handlePageChange}\r\n            itemsCount={totalCount}\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { errors, data } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = 'text') => {\r\n    const { errors, data } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getMovie, saveMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: '',\r\n      genreId: '',\r\n      numberInStock: '',\r\n      dailyRentalRate: ''\r\n    },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label('Title'),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label('Genre'),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label('Number In Stock'),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label('Daily Rental Rate')\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === 'new') return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace('/not-found');\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push('/movies');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('title', 'Title')}\r\n          {this.renderSelect('genreId', 'Genre', this.state.genres)}\r\n          {this.renderInput('numberInStock', 'Number In Stock', 'number')}\r\n          {this.renderInput('dailyRentalRate', 'Rate')}\r\n          {this.renderButton('Save')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from 'react';\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <h1>NotFound</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies <span className=\"sr-only\">(current)</span>\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndpoint = `${apiUrl}/users`;\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport * as userService from '../services/userService';\r\nimport auth from '../services/authService';\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: '',\r\n      password: '',\r\n      name: ''\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label('Username'),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label('Password'),\r\n    name: Joi.string()\r\n      .required()\r\n      .label('Name')\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { headers } = await userService.register(this.state.data);\r\n\r\n      auth.loginWithJwt(headers['x-auth-token']);\r\n\r\n      window.location = '/';\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n\r\n        errors.username = ex.response.data;\r\n\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('username', 'Username')}\r\n          {this.renderInput('password', 'Password', 'password')}\r\n          {this.renderInput('name', 'Name')}\r\n          {this.renderButton('Register')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label('Username'),\r\n    password: Joi.string()\r\n      .required()\r\n      .label('Password')\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { username, password } = this.state.data;\r\n      await auth.login(username, password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : '/';\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n\r\n        errors.username = ex.response.data;\r\n\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('username', 'Username')}\r\n          {this.renderInput('password', 'Password', 'password')}\r\n          {this.renderButton('Login')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n\r\n    window.location = '/';\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport auth from '../../services/authService';\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: '/login', state: { from: props.location } }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movies from './components/movies';\nimport MovieForm from './components/movieForm';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport RegisterForm from './components/registerForm';\nimport LoginForm from './components/loginForm';\nimport Logout from './components/logout';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconsole.log('SUPERMAN', process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}